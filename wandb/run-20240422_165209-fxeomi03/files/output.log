
Epoch: 0, Loss: 1.7765027284622192
[34m[1mwandb[39m[22m: [33mWARNING[39m Step only supports monotonically increasing values, use define_metric to set a custom x axis. For details see: https://wandb.me/define-metric
[34m[1mwandb[39m[22m: [33mWARNING[39m (User provided step: 0 is less than current step: 100. Dropping entry: {'primal loss (layer 0)': 1.0286729335784912, 'primal loss (layer 1)': 0.2261679619550705, 'primal loss (layer 2)': 0.30123305320739746, 'primal loss (layer 3)': 0.23354676365852356, 'dual loss (layer 0)': 1.1118130683898926, 'dual loss (layer 1)': 0.1926673799753189, 'dual loss (layer 2)': 0.27946338057518005, 'dual loss (layer 3)': 0.17944101989269257, 'primal loss': 1.7896206378936768, 'dual loss': 1.7633848190307617, 'loss': 1.7765027284622192, '_timestamp': 1713797553.1576731}).
Epoch: 1, Loss: 1.6568262577056885
[34m[1mwandb[39m[22m: [33mWARNING[39m (User provided step: 1 is less than current step: 100. Dropping entry: {'primal loss (layer 0)': 0.8815211057662964, 'primal loss (layer 1)': 0.18119414150714874, 'primal loss (layer 2)': 0.3115385174751282, 'primal loss (layer 3)': 0.21494407951831818, 'dual loss (layer 0)': 1.0287868976593018, 'dual loss (layer 1)': 0.20261064171791077, 'dual loss (layer 2)': 0.2932652533054352, 'dual loss (layer 3)': 0.19979190826416016, 'primal loss': 1.5891978740692139, 'dual loss': 1.724454641342163, 'loss': 1.6568262577056885, '_timestamp': 1713797575.142655}).
Traceback (most recent call last):
  File "/home/bimokhtari1/Documents/Image-Clustering-Based-on-Node-Edge-Duality-Message-Passing-Using-Graph-Attention-Networks/main.py", line 81, in <module>
    trainer.train(model=model,
  File "/home/bimokhtari1/Documents/Image-Clustering-Based-on-Node-Edge-Duality-Message-Passing-Using-Graph-Attention-Networks/models/training/trainer.py", line 25, in train
    result = model(images, primal_adjacency_tensor, dual_adjacency_tensor, dual_nodes)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/bimokhtari1/anaconda3/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/bimokhtari1/anaconda3/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/bimokhtari1/Documents/Image-Clustering-Based-on-Node-Edge-Duality-Message-Passing-Using-Graph-Attention-Networks/models/networks/dual_gat_image_clustering.py", line 159, in forward
    primal_nodes, indices, conv_encoder_history = self.image_encoder(imgs)
                                                  ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/bimokhtari1/anaconda3/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/bimokhtari1/anaconda3/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/bimokhtari1/Documents/Image-Clustering-Based-on-Node-Edge-Duality-Message-Passing-Using-Graph-Attention-Networks/models/networks/custom_layers.py", line 214, in forward
    x, indices = self.encoder_layers[i](x)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/bimokhtari1/anaconda3/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/bimokhtari1/anaconda3/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/bimokhtari1/anaconda3/lib/python3.11/site-packages/torch/nn/modules/pooling.py", line 164, in forward
    return F.max_pool2d(input, self.kernel_size, self.stride,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/bimokhtari1/anaconda3/lib/python3.11/site-packages/torch/_jit_internal.py", line 497, in fn
    return if_true(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/bimokhtari1/anaconda3/lib/python3.11/site-packages/torch/nn/functional.py", line 771, in max_pool2d_with_indices
    return torch._C._nn.max_pool2d_with_indices(input, kernel_size, stride, padding, dilation, ceil_mode)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt